{"ast":null,"code":"const initialState = {\n  isAuthenticated: false,\n  user: [],\n  persistLogin: {},\n  menu: []\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_USER_FULFILLED':\n      return { ...state,\n        user: action.payload.data.result\n      };\n\n    case 'GET_USER_PENDING':\n      return { ...state\n      };\n\n    case 'GET_USER_REJECTED':\n      return { ...state\n      };\n\n    case 'POST_USER_FULFILLED':\n      const newDataUser = [...state.user, action.payload.data.result];\n      return { ...state,\n        user: newDataUser\n      };\n\n    case 'POST_USER_PENDING':\n      return { ...state\n      };\n\n    case 'POST_USER_REJECTED':\n      return { ...state\n      };\n\n    case 'UPDATE_USER_PENDING':\n      return { ...state\n      };\n\n    case 'UPDATE_USER_REJECTED':\n      return { ...state\n      };\n\n    case 'UPDATE_USER_FULFILLED':\n      console.log(action.payload);\n      const newUserAfterUpdate = state.user.map(user => {\n        if (user.id === action.payload.data.result.id) {\n          return action.payload.data.result;\n        }\n\n        return user;\n      });\n      return { ...state,\n        user: newUserAfterUpdate\n      };\n\n    case 'DELETE_USER_FULFILLED':\n      const newDataAfterDelete = state.user.filter(user => user.id !== action.payload.data.result);\n      return { ...state,\n        user: newDataAfterDelete\n      };\n\n    case 'DELETE_USER_PENDING':\n      return { ...state\n      };\n\n    case 'DELETE_USER_REJECTED':\n      return { ...state\n      };\n\n    case 'UPDATE_MENU_PENDING':\n      return { ...state\n      };\n\n    case 'UPDATE_MENU_REJECTED':\n      return { ...state\n      };\n\n    case 'UPDATE_MENU_FULFILLED':\n      console.log(action.payload);\n      const newmenuAfterUpdate = state.menu.map(menu => {\n        if (menu.id === action.payload.data.result.id) {\n          return action.payload.data.result;\n        }\n\n        return menu;\n      });\n      return { ...state,\n        menu: newmenuAfterUpdate\n      };\n\n    case 'GET_MENU_FULFILLED':\n      return { ...state,\n        menu: action.payload.data.result\n      };\n\n    case 'GET_MENU_PENDING':\n      return { ...state\n      };\n\n    case 'GET_MENU_REJECTED':\n      return { ...state\n      };\n    //\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":{"version":3,"sources":["/home/raka/Desktop/reactku/FrontendWeb_react_redux_Mygadget/src/components/redux/reducers/user.js"],"names":["initialState","isAuthenticated","user","persistLogin","menu","state","action","type","payload","data","result","newDataUser","console","log","newUserAfterUpdate","map","id","newDataAfterDelete","filter","newmenuAfterUpdate"],"mappings":"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","sourcesContent":["const initialState = {\n  isAuthenticated: false,\n  user: [],\n  persistLogin: {},\n  menu: [],\n};\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_USER_FULFILLED':\n      return {\n        ...state,\n        user: action.payload.data.result,\n      };\n    case 'GET_USER_PENDING':\n      return {\n        ...state,\n      };\n    case 'GET_USER_REJECTED':\n      return {\n        ...state,\n      };\n\n    case 'POST_USER_FULFILLED':\n      const newDataUser = [...state.user, action.payload.data.result];\n      return {\n        ...state,\n        user: newDataUser,\n      };\n    case 'POST_USER_PENDING':\n      return {\n        ...state,\n      };\n    case 'POST_USER_REJECTED':\n      return {\n        ...state,\n      };\n    case 'UPDATE_USER_PENDING':\n      return {\n        ...state,\n      };\n    case 'UPDATE_USER_REJECTED':\n      return {\n        ...state,\n      };\n    case 'UPDATE_USER_FULFILLED':\n      console.log(action.payload);\n      const newUserAfterUpdate = state.user.map((user) => {\n        if (user.id === action.payload.data.result.id) {\n          return action.payload.data.result;\n        }\n\n        return user;\n      });\n      return {\n        ...state,\n        user: newUserAfterUpdate,\n      };\n    case 'DELETE_USER_FULFILLED':\n      const newDataAfterDelete = state.user.filter(\n        (user) => user.id !== action.payload.data.result\n      );\n      return {\n        ...state,\n        user: newDataAfterDelete,\n      };\n    case 'DELETE_USER_PENDING':\n      return {\n        ...state,\n      };\n    case 'DELETE_USER_REJECTED':\n      return {\n        ...state,\n      };\n    case 'UPDATE_MENU_PENDING':\n      return {\n        ...state,\n      };\n    case 'UPDATE_MENU_REJECTED':\n      return {\n        ...state,\n      };\n    case 'UPDATE_MENU_FULFILLED':\n      console.log(action.payload);\n      const newmenuAfterUpdate = state.menu.map((menu) => {\n        if (menu.id === action.payload.data.result.id) {\n          return action.payload.data.result;\n        }\n\n        return menu;\n      });\n      return {\n        ...state,\n        menu: newmenuAfterUpdate,\n      };\n    case 'GET_MENU_FULFILLED':\n      return {\n        ...state,\n        menu: action.payload.data.result,\n      };\n    case 'GET_MENU_PENDING':\n      return {\n        ...state,\n      };\n    case 'GET_MENU_REJECTED':\n      return {\n        ...state,\n      };\n\n    //\n\n    default:\n      return state;\n  }\n};\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}