{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/es/storage';\nimport reducers from './reducers';\nconst logger = createLogger({});\nconst persistConfig = {\n  key: 'authpersist',\n  storage,\n  whitelist: ['authpersist']\n};\nconst persReducer = persistReducer(persistConfig, reducers);\nconst store = createStore(persReducer, compose(applyMiddleware(logger, promiseMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nlet persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/raka/Desktop/reactku/FrontendWeb_react_redux_Mygadget/src/components/redux/store.js"],"names":["createStore","applyMiddleware","compose","createLogger","promiseMiddleware","persistStore","persistReducer","storage","reducers","logger","persistConfig","key","whitelist","persReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,MAAM,GAAGN,YAAY,CAAC,EAAD,CAA3B;AACA,MAAMO,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,aADa;AAElBJ,EAAAA,OAFkB;AAGlBK,EAAAA,SAAS,EAAE,CAAC,aAAD;AAHO,CAAtB;AAKA,MAAMC,WAAW,GAAGP,cAAc,CAACI,aAAD,EAAgBF,QAAhB,CAAlC;AAEA,MAAMM,KAAK,GAAGd,WAAW,CACrBa,WADqB,EAErBX,OAAO,CACHD,eAAe,CACXQ,MADW,EAEXL,iBAFW,CADZ,EAKHW,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EALpC,CAFc,CAAzB;AAUA,IAAIC,SAAS,GAAGZ,YAAY,CAACS,KAAD,CAA5B;AACA,SACIA,KADJ,EAEIG,SAFJ","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/es/storage'\n\nimport reducers from './reducers';\n\nconst logger = createLogger({});\nconst persistConfig = {\n    key: 'authpersist',\n    storage,\n    whitelist: ['authpersist']\n}\nconst persReducer = persistReducer(persistConfig, reducers)\n\nconst store = createStore(\n    persReducer,\n    compose(\n        applyMiddleware(\n            logger,\n            promiseMiddleware\n        ),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\nlet persistor = persistStore(store)\nexport {\n    store,\n    persistor\n}\n"]},"metadata":{},"sourceType":"module"}