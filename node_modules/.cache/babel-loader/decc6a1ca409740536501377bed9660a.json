{"ast":null,"code":"import{createStore,applyMiddleware,compose}from'redux';import{createLogger}from'redux-logger';import promiseMiddleware from'redux-promise-middleware';import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/es/storage';import reducers from'./reducers';var logger=createLogger({});var persistConfig={key:'authpersist',storage:storage,whitelist:['authpersist']};var persReducer=persistReducer(persistConfig,reducers);var store=createStore(persReducer,compose(applyMiddleware(logger,promiseMiddleware),window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__()));var persistor=persistStore(store);export{store,persistor};","map":{"version":3,"sources":["/home/raka/Desktop/reactku/FrontendWeb_react_redux_Mygadget/src/components/redux/store.js"],"names":["createStore","applyMiddleware","compose","createLogger","promiseMiddleware","persistStore","persistReducer","storage","reducers","logger","persistConfig","key","whitelist","persReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","persistor"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,0BAA9B,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,MAAM,CAAGN,YAAY,CAAC,EAAD,CAA3B,CACA,GAAMO,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,aADa,CAElBJ,OAAO,CAAPA,OAFkB,CAGlBK,SAAS,CAAE,CAAC,aAAD,CAHO,CAAtB,CAKA,GAAMC,CAAAA,WAAW,CAAGP,cAAc,CAACI,aAAD,CAAgBF,QAAhB,CAAlC,CAEA,GAAMM,CAAAA,KAAK,CAAGd,WAAW,CACrBa,WADqB,CAErBX,OAAO,CACHD,eAAe,CACXQ,MADW,CAEXL,iBAFW,CADZ,CAKHW,MAAM,CAACC,4BAAP,EAAuCD,MAAM,CAACC,4BAAP,EALpC,CAFc,CAAzB,CAUA,GAAIC,CAAAA,SAAS,CAAGZ,YAAY,CAACS,KAAD,CAA5B,CACA,OACIA,KADJ,CAEIG,SAFJ","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/es/storage'\n\nimport reducers from './reducers';\n\nconst logger = createLogger({});\nconst persistConfig = {\n    key: 'authpersist',\n    storage,\n    whitelist: ['authpersist']\n}\nconst persReducer = persistReducer(persistConfig, reducers)\n\nconst store = createStore(\n    persReducer,\n    compose(\n        applyMiddleware(\n            logger,\n            promiseMiddleware\n        ),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\nlet persistor = persistStore(store)\nexport {\n    store,\n    persistor\n}\n"]},"metadata":{},"sourceType":"module"}