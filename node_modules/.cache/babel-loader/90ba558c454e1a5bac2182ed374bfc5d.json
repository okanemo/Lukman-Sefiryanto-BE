{"ast":null,"code":"const initialState = {\n  products: [],\n  paginate: [],\n  order: [],\n  message: ''\n};\n\nconst product = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_PRODUCTS_FULFILLED':\n      // console.log('paginatedsd', action.payload);\n      return { ...state,\n        products: action.payload.data.result,\n        paginate: action.payload.data.paginate // message: action.payload.data,\n\n      };\n\n    case 'GET_PRODuCTS':\n      return { ...state,\n        message: action.payload.data.status\n      };\n\n    case 'GET_PRODUCT_PENDING':\n      return { ...state\n      };\n\n    case 'GET_PRODUCT_REJECTED':\n      return { ...state\n      };\n\n    case 'GET_ORDER_FULFILLED':\n      return { ...state,\n        order: action.payload.data.result\n      };\n\n    case 'GET_ORDER_PENDING':\n      return { ...state\n      };\n\n    case 'GET_ORDER_REJECTED':\n      return { ...state\n      };\n\n    case 'DETAILS_PRODUCT_FULFILLED':\n      return { ...state,\n        products: action.payload.data.result\n      };\n\n    case 'DETAILS_PRODUCT_PENDING':\n      return { ...state\n      };\n\n    case 'DETAILS_PRODUCT_REJECTED':\n      return { ...state\n      };\n\n    case 'PAGINATE_PRODUCT_FULFILLED':\n      return { ...state,\n        products: action.payload.data.result\n      };\n\n    case 'DELETE_PRODUCT_FULFILLED':\n      const newDataAfterDelete = state.products.filter(product => product.id !== action.payload.data.result);\n      return { ...state,\n        products: newDataAfterDelete\n      };\n\n    case 'DELETE_PRODUCT_PENDING':\n      return { ...state\n      };\n\n    case 'DELETE_PRODUCT_REJECTED':\n      return { ...state\n      };\n\n    case 'POST_PRODUCT_FULFILLED':\n      const newDataProduct = [...state.products, action.payload.data.result];\n      return { ...state,\n        products: newDataProduct\n      };\n\n    case 'POST_PRODUCT_PENDING':\n      return { ...state\n      };\n\n    case 'POST_PRODUCT_REJECTED':\n      return { ...state\n      };\n\n    case 'UPDATE_PRODUCT_PENDING':\n      return { ...state\n      };\n\n    case 'UPDATE_PRODUCT_REJECTED':\n      return { ...state\n      };\n\n    case 'UPDATE_PRODUCT_FULFILLED':\n      console.log(action.payload);\n      const newProductAfterUpdate = state.products.map(product => {\n        if (product.id === action.payload.data.result.id) {\n          return action.payload.data.result;\n        }\n\n        return product;\n      });\n      return { ...state,\n        products: newProductAfterUpdate\n      };\n\n    case 'GET_PAGINATE_FULFILLED':\n      return { ...state,\n        products: action.payload.data.paginate\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default product;","map":{"version":3,"sources":["/home/raka/Desktop/reactku/FrontendWeb_react_redux_Mygadget/src/components/redux/reducers/product.js"],"names":["initialState","products","paginate","order","message","product","state","action","type","payload","data","result","status","newDataAfterDelete","filter","id","newDataProduct","console","log","newProductAfterUpdate","map"],"mappings":"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","sourcesContent":["const initialState = {\n  products: [],\n  paginate: [],\n  order: [],\n  message: '',\n};\nconst product = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_PRODUCTS_FULFILLED':\n      // console.log('paginatedsd', action.payload);\n      return {\n        ...state,\n        products: action.payload.data.result,\n        paginate: action.payload.data.paginate,\n        // message: action.payload.data,\n      };\n    case 'GET_PRODuCTS':\n      return {\n        ...state,\n        message: action.payload.data.status,\n      };\n    case 'GET_PRODUCT_PENDING':\n      return {\n        ...state,\n      };\n    case 'GET_PRODUCT_REJECTED':\n      return {\n        ...state,\n      };\n    case 'GET_ORDER_FULFILLED':\n      return {\n        ...state,\n        order: action.payload.data.result,\n      };\n    case 'GET_ORDER_PENDING':\n      return {\n        ...state,\n      };\n    case 'GET_ORDER_REJECTED':\n      return {\n        ...state,\n      };\n\n    case 'DETAILS_PRODUCT_FULFILLED':\n      return {\n        ...state,\n        products: action.payload.data.result,\n      };\n    case 'DETAILS_PRODUCT_PENDING':\n      return {\n        ...state,\n      };\n    case 'DETAILS_PRODUCT_REJECTED':\n      return {\n        ...state,\n      };\n\n    case 'PAGINATE_PRODUCT_FULFILLED':\n      return {\n        ...state,\n        products: action.payload.data.result,\n      };\n\n    case 'DELETE_PRODUCT_FULFILLED':\n      const newDataAfterDelete = state.products.filter(\n        (product) => product.id !== action.payload.data.result\n      );\n      return {\n        ...state,\n        products: newDataAfterDelete,\n      };\n    case 'DELETE_PRODUCT_PENDING':\n      return {\n        ...state,\n      };\n    case 'DELETE_PRODUCT_REJECTED':\n      return {\n        ...state,\n      };\n\n    case 'POST_PRODUCT_FULFILLED':\n      const newDataProduct = [...state.products, action.payload.data.result];\n      return {\n        ...state,\n        products: newDataProduct,\n      };\n    case 'POST_PRODUCT_PENDING':\n      return {\n        ...state,\n      };\n    case 'POST_PRODUCT_REJECTED':\n      return {\n        ...state,\n      };\n\n    case 'UPDATE_PRODUCT_PENDING':\n      return {\n        ...state,\n      };\n    case 'UPDATE_PRODUCT_REJECTED':\n      return {\n        ...state,\n      };\n    case 'UPDATE_PRODUCT_FULFILLED':\n      console.log(action.payload);\n      const newProductAfterUpdate = state.products.map((product) => {\n        if (product.id === action.payload.data.result.id) {\n          return action.payload.data.result;\n        }\n\n        return product;\n      });\n      return {\n        ...state,\n        products: newProductAfterUpdate,\n      };\n    case 'GET_PAGINATE_FULFILLED':\n      return {\n        ...state,\n        products: action.payload.data.paginate,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default product;\n"]},"metadata":{},"sourceType":"module"}